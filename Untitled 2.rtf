{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red133\green35\blue2;\red255\green255\blue255;\red37\green37\blue37;
}
{\*\expandedcolortbl;;\cssrgb\c60000\c20000\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c19216\c19216\c19216;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww16040\viewh10860\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
$ sudo apt-get update
\f1\b0 \cf4 \

\f0\b \cf2 $ sudo apt-get upgrade
\f1\b0 \cf4 \

\f0\b \cf2 $ sudo apt-get install cmake gfortran
\f1\b0 \cf4 \

\f0\b \cf2 $ sudo apt-get install python3-dev python3-numpy
\f1\b0 \cf4 \

\f0\b \cf2 $ sudo apt-get install libjpeg-dev libtiff-dev libgif-dev
\f1\b0 \cf4 \

\f0\b \cf2 $ sudo apt-get install libgstreamer1.0-dev gstreamer1.0-gtk3
\f1\b0 \cf4 \

\f0\b \cf2 $ sudo apt-get install libgstreamer-plugins-base1.0-dev gstreamer1.0-gl
\f1\b0 \cf4 \

\f0\b \cf2 $ sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev
\f1\b0 \cf4 \

\f0\b \cf2 $ sudo apt-get install libgtk2.0-dev libcanberra-gtk*
\f1\b0 \cf4 \

\f0\b \cf2 $ sudo apt-get install libxvidcore-dev libx264-dev libgtk-3-dev
\f1\b0 \cf4 \

\f0\b \cf2 $ sudo apt-get install libtbb2 libtbb-dev libdc1394-22-dev libv4l-dev
\f1\b0 \cf4 \

\f0\b \cf2 $ sudo apt-get install libopenblas-dev libatlas-base-dev libblas-dev
\f1\b0 \cf4 \

\f0\b \cf2 $ sudo apt-get install libjasper-dev liblapack-dev libhdf5-dev
\f1\b0 \cf4 \

\f0\b \cf2 $ sudo apt-get install protobuf-compiler\
\pard\pardeftab720\sa600\partightenfactor0

\f1\b0 \cf4 Download the OpenCV4.5 packages in the root directory by executing the following commands in Bash Terminal.\cb1 \uc0\u8232 
\f0\b \cf2 \cb3 $ wget -O opencv.zip https://github.com/opencv/opencv/archive/4.5.5.zip
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 $ wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.5.5.zip
\f1\b0 \cf4 \
Unzip the packages by running the following commands in the Terminal.\cb1 \uc0\u8232 
\f0\b \cf2 \cb3 $ unzip opencv.zip
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 $ unzip opencv_contrib.zip
\f1\b0 \cf4 \
Rename directories to simpler names by executing the following commands in the Terminal.\cb1 \uc0\u8232 
\f0\b \cf2 \cb3 $ mv opencv-4.5.5 opencv
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 $ mv opencv_contrib-4.5.5 opencv_contrib
\f1\b0 \cf4 \
Finally, get rid of the downloaded ZIP files by executing the following commands in the Terminal.\cb1 \uc0\u8232 
\f0\b \cf2 \cb3 $ rm opencv.zip
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 $ rm opencv_contrib.zip
\f1\b0 \cf4 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 $ sudo pip3 install virtualenv
\f1\b0 \cf4 \

\f0\b \cf2 $ sudo pip3 install virtualenvwrapper\
\pard\pardeftab720\sa600\partightenfactor0
\cf2 $ nano ~/.bashrc
\f1\b0 \cf4 \
In the ~/.bashrc file, append the following lines in the bottom.\cb1 \uc0\u8232 
\f0\b \cf2 \cb3 export WORKON_HOME=$HOME/.virtualenvs
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 source /usr/local/bin/virtualenvwrapper.sh
\f1\b0 \cf4 \

\f0\b \cf2 $ source ~/.bashrc
\f1\b0 \cf4 \
Next create a virtual environment with the name \'93cv\'94 with Python3.x by executing the following command in the Terminal.\cb1 \uc0\u8232 
\f0\b \cf2 \cb3 $ mkvirtualenv cv -p python3\
\pard\pardeftab720\partightenfactor0
\cf2 $ pip install \'93picamera[array]\'94
\f1\b0 \cf4 \

\f0\b \cf2 $ pip3 install numpy\
\
$ deactivate\
\
$ workon cv\
\
$ cd ~/opencv/\cb1 \
\cb3 $ mkdir build
\f1\b0 \cf4 \

\f0\b \cf2 $ cd build\
\
\pard\pardeftab720\sa600\partightenfactor0
\cf2 $ cmake -D CMAKE_BUILD_TYPE=RELEASE \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D CMAKE_INSTALL_PREFIX=/usr/local \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D ENABLE_NEON=ON \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D ENABLE_VFPV3=ON \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D WITH_OPENMP=ON \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D WITH_OPENCL=OFF \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D BUILD_ZLIB=ON \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D BUILD_TIFF=ON \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D WITH_FFMPEG=ON \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D WITH_TBB=ON \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D BUILD_TBB=ON \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D BUILD_TESTS=OFF \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D WITH_EIGEN=OFF \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D WITH_GSTREAMER=ON \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D WITH_V4L=ON \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D WITH_LIBV4L=ON \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D WITH_VTK=OFF \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D WITH_QT=OFF \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D OPENCV_ENABLE_NONFREE=ON \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D INSTALL_C_EXAMPLES=OFF \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D INSTALL_PYTHON_EXAMPLES=OFF \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D PYTHON3_PACKAGES_PATH=/usr/lib/python3/dist-packages \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D OPENCV_GENERATE_PKGCONFIG=ON \\
\f1\b0 \cf4 \cb1 \uc0\u8232 
\f0\b \cf2 \cb3 -D BUILD_EXAMPLES=OFF ..
\f1\b0 \cf4 \
Sudo make -j2\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 sudo make install\
sudo ldconfig\
\
$ cd ~/.virtualenvs/cv/lib/python3.9/site-packages
\f1\b0 \cf4 \

\f0\b \cf2 $ ln -s /usr/local/lib/python3.9/site-packages/cv2/python-3.9/cv2.cpython-37m-arm-linux-gnueabihf.so
\f1\b0 \cf4 \

\f0\b \cf2 $ cd ~\
\
$ python
\f1\b0 \cf4 \

\f0\b \cf2 >>> import cv2
\f1\b0 \cf4 \

\f0\b \cf2 >>> print( cv2.getBuildInformation() )\
\
Pip3 install mediapipe-rpi3\
Pip3 install Tensorflow\
}